{"version":3,"sources":["components/App/App.js","index.js"],"names":["API_ENDPOINT","Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuther","MessageTime","MessageBody","ErrorMessage","p","Loading","Message","auther","time","children","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessage","fetch","then","res","json","data","reverse","catch","err","message","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","rows","onChange","target","onFocus","map","Date","createdAt","toLocaleString","id","toString","length","ReactDom","render","theme","colors","red_300","red_400","red_500","document","getElementById"],"mappings":"sPAIMA,EAAe,8CAEfC,EAAOC,IAAOC,IAAG,gEAKjBC,EAAQF,IAAOG,GAAE,4CAIjBC,EAAcJ,IAAOK,KAAI,iDAIzBC,EAAkBN,IAAOO,SAAQ,+DAKjCC,EAAeR,IAAOS,OAAM,gDAI5BC,EAAcV,IAAOC,IAAG,iDAIxBU,EAAmBX,IAAOC,IAAG,0JAU7BW,EAAcZ,IAAOC,IAAG,gLAQxBY,EAAgBb,IAAOC,IAAG,gEAK1Ba,EAAcd,IAAOC,IAAG,0BACxBc,EAAcf,IAAOC,IAAG,qEAKxBe,EAAehB,IAAOiB,EAAC,gEAKvBC,EAAUlB,IAAOC,IAAG,kPAc1B,SAASkB,EAAQ,GAA6B,IAA3BC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAC/B,OACE,eAACX,EAAgB,WACf,eAACC,EAAW,WACV,cAACC,EAAa,UAAEO,IAChB,cAACN,EAAW,UAAEO,OAEhB,cAACN,EAAW,UAAEO,MAGpB,CA+GeC,MAvGf,WACE,MAAgCC,mBAAS,MAAK,mBAAvCC,EAAQ,KAAEC,EAAW,KAC5B,EAA8CF,mBAAS,MAAK,mBAArDG,EAAe,KAAEC,EAAkB,KAC1C,EAA0BJ,mBAAS,IAAG,mBAA/BK,EAAK,KAAEC,EAAQ,KACtB,EAAgDN,mBAAS,IAAG,mBAArDO,EAAgB,KAAEC,EAAmB,KAC5C,EAAwDR,oBAAS,GAAM,mBAAhES,EAAoB,KAAEC,EAAuB,KAE9CC,EAAe,WACnBC,MAAMtC,GACHuC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACG,GACLd,EAAYc,EAAKC,UACnB,IACCC,OAAM,SAACC,GACNf,EAAmBe,EAAIC,QACzB,GACJ,EA+CA,OAJAC,qBAAU,WACRV,GACF,GAAG,IAGD,eAACpC,EAAI,WACFkC,GAAwB,cAACf,EAAO,UAAC,eAClC,cAAChB,EAAK,UAAC,uBACP,eAACE,EAAW,CAAC0C,SA7CQ,SAACC,GACxBA,EAAEC,iBAEEf,IACJC,GAAwB,GAExBE,MAAMtC,EAAc,CAClBmD,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,MACVH,KAAMtB,MAGPQ,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACG,GACLN,GAAwB,GACR,IAAZM,EAAKe,IAITpB,IACAL,EAAS,KAJPE,EAAoBQ,EAAKI,QAK7B,IACCF,OAAM,SAACC,GACNT,GAAwB,GACxBF,EAAoBW,EAAIC,QAC1B,IACJ,EAe4C,UACtC,cAACtC,EAAe,CACdkD,KAAM,GACN3B,MAAOA,EACP4B,SArDqB,SAACV,GAC5BjB,EAASiB,EAAEW,OAAO7B,MACpB,EAoDQ8B,QAlBoB,WAC1B3B,EAAoB,KACtB,IAkBM,cAACxB,EAAY,UAAC,6BACbuB,GACC,cAACf,EAAY,UAAEe,OAGnB,cAACrB,EAAW,UACTe,GACCA,EAASmC,KAAI,SAAChB,GACZ,OACE,cAACzB,EAAO,CAENC,OAAQwB,EAAQU,SAChBjC,KAAM,IAAIwC,KAAKjB,EAAQkB,WAAWC,iBAAiB,SAElDnB,EAAQO,MAJJP,EAAQoB,GAOnB,MAEHrC,GACC,eAACX,EAAY,WAAC,yBACWW,EAAgBsC,cAG1CxC,GAAgC,IAApBA,EAASyC,QAAgB,4BAAG,kBAG/C,ECzLAC,IAASC,OACP,cAAC,IAAa,CAACC,MATH,CACZC,OAAQ,CACNC,QAAS,UACTC,QAAS,UACTC,QAAS,YAKiB,SAC1B,cAAC,EAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.52186c2d.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst API_ENDPOINT = \"https://student-json-api.lidemy.me/comments\";\n\nconst Page = styled.div`\n  width: 360px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n`;\n\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`;\n\nconst MessageTextArea = styled.textarea`\n  display: block;\n  width: 100%;\n`;\n\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`;\n\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\n\nconst MessageContainer = styled.div`\n  border: 1px solid black;\n  padding: 8px 16px;\n  border-radius: 8px;\n\n  &:not(first-child) {\n    margin-top: 8px;\n  }\n`;\n\nconst MessageHead = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3)\n  padding-bottom: 4px;\n`;\n\nconst MessageAuther = styled.div`\n  color: #333;\n  font-size: 14px;\n`;\n\nconst MessageTime = styled.div``;\nconst MessageBody = styled.div`\n  margin-top: 16px;\n  font-size: 16px;\n`;\n\nconst ErrorMessage = styled.p`\n  margin-top: 16px;\n  color: red;\n`;\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.3);\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 30px;\n`\n\nfunction Message({ auther, time, children }) {\n  return (\n    <MessageContainer>\n      <MessageHead>\n        <MessageAuther>{auther}</MessageAuther>\n        <MessageTime>{time}</MessageTime>\n      </MessageHead>\n      <MessageBody>{children}</MessageBody>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  auther: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n};\n\nfunction App() {\n  const [messages, setMessages] = useState(null);\n  const [messageApiError, setMessageApiError] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const [postMessageError, setPostMessageError] = useState(\"\")\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false)\n\n  const fetchMessage = () => {\n    fetch(API_ENDPOINT)\n      .then((res) => res.json())\n      .then((data) => {\n        setMessages(data.reverse());\n      })\n      .catch((err) => {\n        setMessageApiError(err.message);\n      });\n  };\n\n  const handleTextareaChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (isLoadingPostMessage) return;\n    setIsLoadingPostMessage(true)\n\n    fetch(API_ENDPOINT, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"bun\",\n        body: value,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setIsLoadingPostMessage(false);\n        if (data.ok === 0) {\n          setPostMessageError(data.message);\n          return;\n        }\n        fetchMessage();\n        setValue(\"\");\n      })\n      .catch((err) => {\n        setIsLoadingPostMessage(false);\n        setPostMessageError(err.message);\n      });\n  };\n\n  const handleTextareaFocus = () => {\n    setPostMessageError(null)\n  }\n\n  // App component render完後去 fetch api，因為只有畫面 render完後 fetch一次所以要放[]\n  useEffect(() => {\n    fetchMessage()\n  }, []);\n\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea\n          rows={10}\n          value={value}\n          onChange={handleTextareaChange}\n          onFocus={handleTextareaFocus}\n        />\n        <SubmitButton>送出留言</SubmitButton>\n        {postMessageError && (\n          <ErrorMessage>{postMessageError}</ErrorMessage>\n        )}\n      </MessageForm>\n      <MessageList>\n        {messages &&\n          messages.map((message) => {\n            return (\n              <Message\n                key={message.id}\n                auther={message.nickname}\n                time={new Date(message.createdAt).toLocaleString()}\n              >\n                {message.body}\n              </Message>\n            );\n          })}\n      </MessageList>\n      {messageApiError && (\n        <ErrorMessage>\n          Something went wrong. {messageApiError.toString()}\n        </ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <p>No Message.</p>}\n    </Page>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  colors: {\n    red_300: \"#F84527\",\n    red_400: \"#D53B21\",\n    red_500: \"#BE3B4C\",\n  },\n};\n\nReactDom.render(\n  <ThemeProvider theme={theme} >\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n); //執行的時候，把 App component render到 root位置"],"sourceRoot":""}